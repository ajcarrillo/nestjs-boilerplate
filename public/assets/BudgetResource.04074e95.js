import{a as v}from"./index.2cf0d985.js";import{a7 as w,r as u,c as k,R,a8 as B}from"./index.c148c0c6.js";var b={getActions(){return a.get("/actions")},storeAction(t){return a.post("/actions",t)},updateAction(t,e){return a.put(`/actions/${t}`,e)},getDictionary(){return a.get("/actions/dictionary")}},x={getLines(){return a.get("/lines")},storeLine(t){return a.post("/lines",t)},updateLine(t,e){return a.put(`/lines/${t}`,e)},getDictionary(){return a.get("/lines/dictionary")}},L={getAreas(){return a.get("/areas")},storeArea(t){return a.post("/areas",t)},updateArea(t,e){return a.put(`/areas/${t}`,e)},getDictionary(){return a.get("/areas/dictionary?withFullName=true")}},T={getArticles(){return a.get("/articles")},storeArticle(t){return a.post("/articles",t)},updateArticle(t,e){return a.put(`/articles/${t}`,e)},getDictionary(){return a.get("/articles/dictionary")}};const $=w("app",()=>{const t=u([]),e=u([]),o=u([]),r=u([]),n=u(!1),c=u([]),i=u(2024);function l(){t.value=[],e.value=[],o.value=[],r.value=[]}function A(){n.value=!n.value}async function h(){const{data:s}=await b.getDictionary();t.value=s}async function d(){const{data:s}=await x.getDictionary();e.value=s}async function g(){const{data:s}=await L.getDictionary();o.value=s}async function D(){const{data:s}=await T.getDictionary();r.value=s}async function y(){const{data:s}=await F.getDictionary();c.value=s.map(({year:p})=>p)}async function m(){l(),await Promise.all([y(),h(),d(),g(),D()])}return{actionDictionary:t,lineDictionary:e,areaDictionary:o,articleDictionary:r,leftDrawerOpen:n,budgetDictionary:c,selectedBudget:i,flushDictionaries:l,fetchDictionaries:m,toggleLeftDrawer:A,fetchActionDictionary:h,fetchLineDictionary:d,fetchAreaDictionary:g,fetchBudgetDictionary:y,getArticleByName:s=>k(()=>r.value.filter(p=>p.label.toLowerCase().includes(s.toLowerCase())))}},{persist:!0}),f=v.create({});var a={coreUrl:"https://nestjs-boilerplate-production.up.railway.app",apiUrl:"https://nestjs-boilerplate-production.up.railway.app/api",http:f,createRequestInterceptor(){const t=$();f.interceptors.request.use(e=>(e.headers["x-budget-year"]=t.selectedBudget.toString(),e),e=>Promise.reject(e))},updateAccessToken(){const t=R();this.http.defaults.headers.common.Authorization=`Bearer ${t.accessToken}`},checkForExpiredToken(t){t.response&&t.response.status===401&&B.logout("/login")},apiRoute(t){return this.createRequestInterceptor(),this.updateAccessToken(),`${this.apiUrl}${t}`},get(t,e){const o=this;return new Promise((r,n)=>{o.http.get(o.apiRoute(t),{params:e}).then(c=>{r(c)}).catch(c=>{o.checkForExpiredToken(c),n(c)})})},post(t,e,o={}){const r=this;return new Promise((n,c)=>{r.http.post(r.apiRoute(t),e,o).then(i=>{n(i)}).catch(i=>{r.checkForExpiredToken(i),c(i)})})},patch(t,e,o={}){const r=this;return new Promise((n,c)=>{r.http.patch(r.apiRoute(t),e,o).then(i=>{n(i)}).catch(i=>{r.checkForExpiredToken(i),c(i)})})},put(t,e,o={}){const r=this;return new Promise((n,c)=>{r.http.put(r.apiRoute(t),e,o).then(i=>{n(i)}).catch(i=>{r.checkForExpiredToken(i),c(i)})})},delete(t){const e=this;return new Promise((o,r)=>{e.http.delete(e.apiRoute(t)).then(n=>{o(n)}).catch(n=>{e.checkForExpiredToken(n),r(n)})})}},F={getBudgets(){return a.get("/budgets")},storeBudget(t){return a.post("/budgets",t)},getBudgetById(t){return a.get(`/budgets/${t}`)},getDictionary(){return a.get("/budgets/dictionary")}};export{T as A,F as B,x as L,b as a,L as b,a as p,$ as u};
