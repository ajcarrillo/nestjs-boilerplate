import{a as n}from"./app.d25956e3.js";import{l as o}from"./layout.39273edf.js";import{u as y}from"./useDictionaries.59ed5753.js";import{c as m}from"./index.7adaf3a2.js";import{u as A,a as l,b as d}from"./QChip.b591fbe4.js";import{r as u}from"./index.4e938c33.js";const E=async()=>{const{data:r}=await n.getAreas();return r},x=async r=>{const{data:a}=await n.storeArea(r);return a},w=async r=>{const{id:a,description:e,alias:t}=r,{data:s}=await n.updateArea(a,{description:e,alias:t});return s},v=()=>{const{isLoading:r,isError:a,data:e,error:t}=A({queryKey:["areas"],queryFn:E,staleTime:6e5});return{isLoading:r,isError:a,data:e,error:t}},F=()=>{const r=l();return{areaStoreMutations:d({mutationFn:x,onSuccess:()=>{r.invalidateQueries({queryKey:["areas"]}),o.showSuccessNotification("\xC1rea creada con \xE9xito")},onError:()=>{o.showErrorNotification("Error al crear \xE1rea")}})}},N=()=>{const r=l();return{areaUpdateMutations:d({mutationFn:w,onSuccess:()=>{r.invalidateQueries({queryKey:["areas"]}),o.showSuccessNotification("\xC1rea actualizada con \xE9xito")},onError:()=>{o.showErrorNotification("Error al actualizar \xE1rea")}})}},Q=()=>{const{areaDictionary:r}=y(),a=u(),e=m(r.value),t=u(e);function s(i,c){if(i===""){c(()=>{t.value=e});return}c(()=>{const f=i.toLowerCase();t.value=e.filter(p=>p.full_description.toLowerCase().indexOf(f)>-1)})}return{areasOptions:t,area:a,filterArea:s}};export{N as a,v as b,Q as c,F as u};
